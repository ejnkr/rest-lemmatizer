{{- if .Values.userdic.persistent.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/name: rest-lemmatizer
    app.kubernetes.io/component: rest-userdic
    app.kubernetes.io/instance: {{ .Release.Name }}-userdic
  name: {{ .Release.Name }}-userdic
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.userdic.persistent.storage }}
{{- end }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: rest-lemmatizer
    app.kubernetes.io/component: rest-userdic
    app.kubernetes.io/instance: {{ .Release.Name }}-userdic
  name: {{ .Release.Name }}-userdic
spec:
  strategy:
    type: Recreate
  replicas: {{ .Values.userdic.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}-userdic
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rest-lemmatizer
        app.kubernetes.io/component: rest-userdic
        app.kubernetes.io/instance: {{ .Release.Name }}-userdic
    spec:
      {{- if .Values.userdic.persistent.enabled }}
      volumes:
      - name: store
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-userdic
      {{- end }}
      containers:
      - name: http
        image: {{ .Values.userdic.image }}
        imagePullPolicy: "IfNotPresent"
        command: ["rest-userdic"]
        {{- if .Values.userdic.persistent.enabled }}
        volumeMounts:
        - mountPath: "/store"
          name: store
        {{- end }}
        ports:
        - containerPort: 8080
          name: http
        env:
          - name: RUST_LOG
            value: {{ .Values.userdic.logLevel }}
          - name: PORT
            value: "8080"
          - name: UNIQUE_SUFFIXES_COUNT_THRESHOLD
            value: {{ .Values.userdic.config.uniqueSuffixesCountThreshold | quote }}
          - name: COUNT_THRESHOLD
            value: {{ .Values.userdic.config.countThreshold | quote }}
          - name: NOUN_PROBABILITY_THRESHOLD
            value: {{ .Values.userdic.config.nounProbabilityThreshold | quote }}
        #livenessProbe:
        # httpGet:
        #   path: /health
        #   port: 8080
        # initialDelaySeconds: 20
        # periodSeconds: 30
        # timeoutSeconds: 30
        resources:
{{ toYaml .Values.userdic.resources | indent 10 }}
      {{- if .Values.userdic.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.userdic.nodeSelector | indent 8 }}
      {{- end }}

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: rest-lemmatizer
    app.kubernetes.io/component: rest-userdic
    app.kubernetes.io/instance: {{ .Release.Name }}-userdic
  name: {{ .Release.Name }}-userdic
spec:
  ports:
    - port: 8080
      name: http
  selector:
    app.kubernetes.io/instance: {{ .Release.Name }}-userdic
  type: ClusterIP
